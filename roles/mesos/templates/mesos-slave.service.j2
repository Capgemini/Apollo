[Unit]
Description=MesosSlave
After=docker.service
Requires=docker.service

[Service]
Restart=on-failure
RestartSec=20
TimeoutStartSec=0
EnvironmentFile=-/etc/environment
ExecStartPre=-/usr/bin/docker kill mesos_slave
ExecStartPre=-/usr/bin/docker rm mesos_slave
ExecStartPre=/usr/bin/docker pull {{ mesos_slave_image }}
ExecStart=/usr/bin/docker run --rm --name mesos_slave \
--net=host \
--privileged=true \
-p {{ mesos_slave_port }}:{{ mesos_slave_port }} \
-v /sys:/sys \
-v /proc:/host/proc:ro \
-v /lib/libgcrypt.so:/lib/libgcrypt.so:ro \
-v /lib/libsystemd.so.0:/lib/libsystemd.so.0:ro \
-v /lib/libpthread.so.0:/lib/libpthread.so.0:ro \
-v /lib64/libdevmapper.so.1.02:/lib/libdevmapper.so.1.02:ro \
-v /usr/bin/docker:/usr/bin/docker:ro \
-v {{ mesos_docker_socket }}:/var/run/docker.sock \
-e "MESOS_MASTER=zk://{{ zookeeper_peers_nodes }}/mesos" \
-e "MESOS_EXECUTOR_REGISTRATION_TIMEOUT={{ mesos_executor_registration_timeout }}" \
-e "MESOS_CONTAINERIZERS={{ mesos_containerizers }}" \
-e "MESOS_RESOURCES={{ mesos_resources }}" \
-e "MESOS_IP={{ mesos_ip }}" \
-e "MESOS_WORK_DIR={{ mesos_slave_work_dir }}" \
-e "MESOS_HOSTNAME={{ mesos_hostname }}" \
{{ mesos_slave_image }}

ExecStop=/usr/bin/docker stop mesos_slave

[Install]
WantedBy=multi-user.target
