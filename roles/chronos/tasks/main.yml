# Install (docker-py) python package as is a docker module dependency.
- pip: name=docker-py version=1.1.0

- name: create chronos config directory
  when: chronos_enabled
  file:
    path: '/etc/chronos/conf'
    state: directory
    mode: 0755
  sudo: yes
  tags:
    - chronos

- name: run chronos container
  when: chronos_enabled
  docker:
    name: chronos
    image: "{{ chronos_image }}"
    state: started
    restart_policy: "{{ chronos_restart_policy }}"
    ports:
    - "{{ chronos_host_port }}:4400"
    expose:
    - "4400"
    net: "{{ chronos_net }}"
    command: "{{ chronos_command }}"
    memory_limit: "{{ chronos_container_memory_limit }}"
    volumes:
    - "/etc/chronos/conf:/etc/chronos/conf"
    - "/etc/mesos/zk:/etc/mesos/zk"

- name: upload chronos template service
  when: chronos_enabled
  template:
    src: chronos.conf.j2
    dest: /etc/init/chronos.conf
    mode: 0755
  sudo: yes
  tags:
    - chronos

# Attach to the running container, or start it if needed
# and forward all signals so that the process manager can detect
# when a container stops and correctly restart it.
- name: ensure chronos is running (and enable it at boot)
  when: chronos_enabled
  sudo: yes
  service:
    name: chronos
    state: started
    enabled: yes
  tags:
    - chronos

- name: Set chronos consul service definition
  sudo: yes
  template:
    src: chronos-consul.j2
    dest: "{{ chronos_consul_dir }}/chronos.json"
  notify:
    - restart consul
  when: chronos_enabled

# tasks for stoping docker chronos
- name: stop chronos container
  when: not chronos_enabled
  docker:
    name: chronos
    image: "{{ chronos_image }}"
    state: stopped
